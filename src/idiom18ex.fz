ex18 is

  node(T type,
       val T,
       children Sequence (node T)) is

    traverse (f T -> unit) unit is
      f val
      for child in children do
        child.traverse f

  blatt(val string) => node val (lists.empty (node string))
  t := node "lion" [blatt "cougar",
                    blatt "elephant",
                    node "hornet" [blatt "bee", blatt "ant"],
                    blatt "beatle2"]

  t.traverse (x -> say x)
